{
    "task_id": "004",
    "type": "code_implementation",
    "description": "在infra_memory模块中实现内存池功能",
    "priority": "high",
    "project_context": {
        "root_dir": "D:/dev/ai-ppdb",
        "source_files": [
            "infra_memory.h",
            "infra_memory.c"
        ]
    },
    "reporting": {
        "required": true,
        "interval": "per_step",
        "files": {
            "log": "ppdb/ai/dev/logs/task_004.log",
            "status": "ppdb/ai/dev/status/task_004.json"
        },
        "rules": [
            "每个步骤开始前必须记录日志",
            "每个关键设计决策必须记录到日志",
            "每个函数实现完成后必须记录到日志",
            "每次测试执行都必须记录结果",
            "如果遇到问题必须立即记录",
            "状态文件必须实时更新"
        ]
    },
    "steps": [
        {
            "step": 1,
            "action": "分析内存池需求和设计",
            "tool": "code_analysis",
            "required_decisions": [
                "内存块大小策略",
                "内存对齐方式",
                "分配算法选择",
                "碎片处理方法"
            ],
            "log_required": {
                "before": "开始分析内存池的需求和设计",
                "during": "确定内存池的关键特性：[特性列表]",
                "after": "完成内存池设计方案",
                "details": "必须记录每个设计决策的原因"
            }
        },
        {
            "step": 2,
            "action": "实现内存池基础结构",
            "tool": "code_implementation",
            "log_required": {
                "before": "开始实现内存池的基础数据结构",
                "during": "实现内存块管理结构",
                "after": "基础结构实现完成"
            }
        },
        {
            "step": 3,
            "action": "实现内存分配和回收",
            "tool": "code_implementation",
            "log_required": {
                "before": "开始实现内存分配和回收功能",
                "during": "实现分配/回收算法",
                "after": "功能实现完成"
            }
        },
        {
            "step": 4,
            "action": "实现内存池管理接口",
            "tool": "code_implementation",
            "log_required": {
                "before": "开始实现内存池管理接口",
                "during": "添加接口函数",
                "after": "接口实现完成"
            }
        },
        {
            "step": 5,
            "action": "编写单元测试",
            "tool": "test_implementation",
            "log_required": {
                "before": "开始编写内存池单元测试",
                "during": "添加测试用例",
                "after": "测试用例编写完成"
            }
        },
        {
            "step": 6,
            "action": "运行完整测试",
            "tool": "test_execution",
            "log_required": {
                "before": "开始运行完整测试套件",
                "during": "执行测试用例",
                "after": "测试执行完成"
            }
        }
    ],
    "constraints": [
        "只修改infra_memory模块文件",
        "保持现有内存管理接口不变",
        "确保内存对齐要求",
        "实现内存复用机制",
        "添加内存使用统计",
        "必须通过所有测试",
        "代码必须符合项目规范",
        "所有步骤必须记录日志",
        "所有设计决策必须记录原因"
    ],
    "success_criteria": [
        "内存池功能完整实现",
        "所有测试用例通过",
        "内存分配性能提升",
        "内存碎片减少",
        "无内存泄漏"
    ]
} 