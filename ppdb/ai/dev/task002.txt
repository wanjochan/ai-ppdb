{
    "task_id": "002",
    "type": "code_implementation", 
    "description": "实现内存池功能",
    "priority": "high",
    "project_context": {
        "root_dir": "D:/dev/ai-ppdb",
        "source_dir": "D:/dev/ai-ppdb/ppdb/src",
        "test_dir": "D:/dev/ai-ppdb/ppdb/test",
        "scripts_dir": "D:/dev/ai-ppdb/ppdb/scripts"
    },
    "reporting": {
        "required": true,
        "interval": "per_step",
        "files": {
            "log": "ppdb/ai/dev/logs/task_002.log",
            "status": "ppdb/ai/dev/status/task_002.json"
        },
        "rules": [
            "每个步骤开始前必须更新状态文件的 current_step",
            "每个步骤完成后必须更新状态文件的 status",
            "每个关键操作必须记录到日志文件",
            "如果5分钟内没有日志更新，视为任务异常"
        ]
    },
    "steps": [
        {
            "step": 1,
            "action": "搜索代码",
            "tool": "codebase_search",
            "params": {
                "query": "memory pool implementation",
                "target_directories": ["ppdb/src/internal/infra"]
            },
            "log_required": {
                "before": "开始搜索内存池相关代码",
                "during": "正在搜索目录: {directory}",
                "after": "搜索完成,发现的相关文件:{files}",
                "details": "文件 {file} 中发现的相关代码: {snippet}"
            }
        },
        {
            "step": 2,
            "action": "修改代码",
            "tool": "edit_file",
            "target": "ppdb/src/internal/infra/infra_core.c",
            "log_required": {
                "before": "开始修改 {file} 文件",
                "during": "正在{action}:行号 {line}",
                "after": "完成修改,变更行数:{changed_lines}",
                "details": [
                    "修改内容: {change_description}",
                    "修改原因: {change_reason}",
                    "影响范围: {impact_scope}"
                ]
            }
        },
        {
            "step": 3,
            "action": "运行测试",
            "tool": "run_terminal_cmd",
            "command": "ppdb/scripts/build_test_infra.bat",
            "log_required": {
                "before": "开始运行测试",
                "during": "正在执行测试: {test_name}",
                "after": "测试完成,结果:{result}",
                "details": [
                    "编译状态: {build_status}",
                    "测试用例总数: {total_tests}",
                    "通过数量: {passed_tests}",
                    "失败数量: {failed_tests}",
                    "错误信息: {error_messages}"
                ]
            }
        }
    ],
    "status": "pending",
    "error_handling": {
        "on_missing_logs": "pause_and_notify",
        "on_status_timeout": "request_update"
    }
} 