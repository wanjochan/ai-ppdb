# 语言规范
   - 对话必须用中文，保持简洁（concise）和精准（precise）
   - 项目文档除非特别要求，否则使用中英文皆可
   - 项目源代码(包括头文件、批处理)特别是注释必须用英文

# 必要时上网寻求解决方案
   - 遇到解决不了的问题，使用自带的 @web 工具，寻找解决方案
   - 如果网络受限，可使用curl工具（用代理http://127.0.0.1:8888）

# 开发规范 与 工作流程
   - 必须经常阅读项目的设计文档确保不偏离项目、计划、任务
   - 任何新建文件前，必须先检查是否有类似的文件以免重复新建
   - 任何新添加函数或结构体前，先检查附近是否有类似可重用的内容以免重复
   - 修改文件时要细心，避免误删其他内容
   - 【工作文件】 {这个文档所在的代码仓目录}/ai/tasks/{task_id}.md 如果用户自己不指定 task_id，就根据工作任务的核心关键词生成。用户还可以用这个task_id结合本文档来延续工作会话
   - 要使用思维链（chain of thought）来分析问题、制定方案并随时更新【工作文件】中的章节（已有或新增），计划的内容至少应包含：问题/分析/方案/执行
   - 执行过程如果不是特别需要用户干预的情况，就尽量全自动执行
   - 执行方案时，即使只有一个步骤也尽量使用平行处理（parallel_apply）和批处理（batch_apply），这是为了节省TOKEN和时间
   - 每轮会话在【变更调整计划】或者【执行方案后】或者【有新的发现】都要在【工作文件】中更新当前计划、子计划、任务、项目
   - 七轮自动执行下来如果没解决问题就停下来讨论
   
# 一些经验总结
- 按照 ai/tasker-v2.md 走工作流程（请注意先阅读它!）
- 在互动中不用输出代码给用户看；
- 注意不要马上修改文件，要先尽量读取相关的文件，做了分析并做了计划后才去修改文件


