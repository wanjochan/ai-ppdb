# 任务管理系统提示词

## 概述
为了在多种工具（IDE+LLM）中流转任务并保留完整的沟通过程，我们设计这个基于邮件的任务管理系统。
它基于文件系统，使用 Markdown 文件记录邮件内容，实现任务的创建、更新、删除和搜索功能。

## 角色定义与权限
- User（用户）：需求方，一般是真人
  - 可以创建任务给任何角色
  - 可以关闭自己创建的任务
  - 可以查看所有任务状态
- PM（项目经理）：负责任务分配、优先级管理和进度跟踪
  - 收到任务后，应创建新的子任务分配给具体执行者
  - 可以调整任务优先级
  - 可以设置任务截止日期
  - 负责跟踪和协调子任务进度
  - 不要规划时间表，人工智能对时间不敏感
- Dev（开发者）：负责任务的具体实现和问题解决
  - 执行分配到的任务
  - 可以创建技术相关的子任务
  - 更新任务进度和状态

## 邮件格式
每个邮件使用 markdown 文件存储，包含以下字段：
```markdown
# 邮件标题

## 元数据
- 发件人: [角色]
- 收件人: [角色]
- 时间: [ISO 8601格式]
- 优先级: [高/中/低]
- 状态: [新建/处理中/已完成/已关闭]
- 父任务: [可选，父任务ID]
- 依赖任务: [可选，依赖的任务ID]

## 正文
[任务描述/问题陈述/解决方案等]

## 历史记录
### [时间] [发件人] -> [收件人]
[沟通内容]

### [时间] [发件人] -> [收件人]
[沟通内容]
```

## 文件结构
- `ai/var/mails/`：存储邮件文件
  - `new/`：新邮件
  - `processing/`：处理中的邮件
  - `completed/`：已完成的邮件
  - `archived/`：已归档的邮件
- `ai/var/mails/index.md`：邮件索引文件，记录所有邮件的基本信息

## 操作说明

### 创建邮件
1. 生成新的邮件ID（使用时间戳+描述性文字）
2. 创建新的 markdown 文件，存放在 new/ 目录
3. 在 index.md 添加邮件记录
4. 如果是回复邮件，在原邮件的历史记录中添加新的记录

### 处理邮件
1. 将邮件从 new/ 移动到 processing/
2. 更新邮件内容和状态
3. 添加新的历史记录
4. 更新 index.md

### 完成邮件
1. 将邮件从 processing/ 移动到 completed/
2. 更新邮件状态为已完成
3. 添加完成记录
4. 更新 index.md

### 归档邮件
1. 将已完成超过24小时的邮件移动到 archived/
2. 更新 index.md

### 搜索邮件
1. 通过 index.md 检索邮件
2. 支持按发件人、收件人、状态、优先级等条件搜索

## 邮件索引格式
index.md 使用 markdown 表格记录邮件信息：
```markdown
# 邮件索引

| ID | 标题 | 发件人 | 收件人 | 状态 | 优先级 | 创建时间 | 更新时间 | 位置 | 父邮件ID | 依赖邮件ID |
|---|---|---|---|---|---|---|---|---|---|---|
```

## 示例邮件
```markdown
# 分析PPDB架构并编写文档

## 元数据
- 发件人: User
- 收件人: PM
- 时间: 2024-02-23T11:13:06+08:00
- 优先级: 中
- 状态: 新建
- 父任务: 无
- 依赖任务: 无

## 正文
需要分析旧的PPDB架构并编写一份详细的架构文档。

## 历史记录
### 2024-02-23T11:13:06+08:00 User -> PM
创建任务：需要分析PPDB架构并编写文档

### 2024-02-23T11:13:25+08:00 PM -> Dev
将任务拆分为两个子任务：
1. 分析旧架构
2. 编写文档
请先开始第一个子任务。

### 2024-02-23T12:30:00+08:00 Dev -> PM
已完成架构分析和文档编写，详见 docs/ARCH.md
```

## 演示提示词

```

请你阅读 tasker.prompt 了解我们的任务管理模式，然后：

1）按顺序分别以 PM、Dev 角色去用命令行查收信件
2）如果有新信件，就进行分析、计划、执行、回复、更新状态；
3）回到第 1 步

## cursor 提示词
1. 首先需要读取 ai/tasker.prompt 文件，了解任务管理模式
2. 作为 PM 角色，使用命令行工具查收信件
3. 作为 Dev 角色，使用命令行工具查收信件
4. 如果有新信件，进行分析、计划、执行、回复、更新状态
5. 重复上述过程


```